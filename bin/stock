#!/usr/bin/env node

var app = require('../app');
var http = require('http').Server(app);
var io = require('socket.io')(http);
var port = process.env.PORT || 3333;
http.listen(port, function() {
	console.log('Server listening at port %d', port);
});
io.on('connection', function(socket) {
	console.log("connection");
	socket.on('search', function(data) {
		console.log("search code:" + data);
		var url = "http://hq.sinajs.cn/list=" + data;
		var http = require('http');
		var BufferHelper = require('bufferhelper');
		var iconv = require('iconv-lite');
	    http.get(url,function(res){
	      var bufferHelper = new BufferHelper();
	      res.on('data', function (chunk) {
	        bufferHelper.concat(chunk);
	      });
	      res.on('end',function(){ 
	        var str = iconv.decode(bufferHelper.toBuffer(),'GBK');
	        console.log("emit search_result: " + str);
	        io.emit('search_result', str);
	      });
	    });
	});	
	socket.on('command', function(data) {
		try {
			console.log("command:  %s, password: %s", data.command, data.password);
			var exec = require('child_process').exec;
			if(data.password != "314159")
				throw "password not right!"
			console.log("exec command: %s", data.command);
			exec(data.command, function(err, stdout) {
				console.log("err: %s, stdout: %s", err, stdout);
				if(err)
					return io.emit('command-result', "error: " + err);
				if(stdout) {
					console.log("stdout: " + stdout);
					io.emit('command-result', "stdout: " + stdout);
				}			
			});	
		} catch(e) {
			io.emit('command-result', "error: " + e);
		}
	});
});
io.on('event', function(data){
	console.log("event");
});
io.on('disconnect', function(){
	console.log("disconnect");
});